# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-ubuntu:
    runs-on: ${{ matrix.os }}
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      fail-fast: false
      matrix:
          python-version: ["cp38-cp38", "cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312"]
          os: ["ubuntu-latest"]

    steps:
    - name: Install dependencies
      run: |
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install --upgrade pip
        /opt/python/${{ matrix.python-version }}/bin/python -m pip install wheel auditwheel pybind11
        git config --global --add safe.directory '*'

    - uses: actions/checkout@v3
      with:
        repository: Siegel-Lab/libSps
        submodules: true
        #ref: v0.3.7

    - name: Install libSps
      run: /opt/python/${{ matrix.python-version }}/bin/python -m pip install -e . -vvv

    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build package
      run: /opt/python/${{ matrix.python-version }}/bin/python setup.py bdist_wheel -vvv

    - name: Audit wheel
      run: |
        /opt/python/${{ matrix.python-version }}/bin/python -m auditwheel repair --strip --plat manylinux2014_x86_64 --exclude libgomp.so.1 dist/*.whl
        rm -r dist
        mv wheelhouse dist

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist



  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          python-version: ["3.8", "3.9", "3.10", "3.11"]
          os: ["windows-latest"]

    steps:
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install wheel pybind11

    - uses: actions/checkout@v3
      with:
        repository: Siegel-Lab/libSps
        submodules: true
        #ref: v0.3.7

    - name: Install libSps
      run: pip install -e . 

    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build package
      run: python setup.py bdist_wheel -vvv

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist



  build-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          python-version: ["3.8", "3.9", "3.10", "3.11"]
          os: ["macos-12", "macos-13"]

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install wheel pybind11

    - uses: actions/checkout@v3
      with:
        repository: Siegel-Lab/libSps
        submodules: true
        #ref: v0.3.7

    - name: Install libSps
      run: pip install -e . 

    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build package
      run: python setup.py bdist_wheel

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist


  publish-pypi:
    needs: [build-ubuntu, build-windows, build-mac]
    runs-on: ubuntu-20.04
  
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: ./dist

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
