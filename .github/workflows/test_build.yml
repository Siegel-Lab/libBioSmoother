
name: Test Python Publish Package

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
        python-version: ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: ${{ matrix.python-version }}
          CIBW_BEFORE_BUILD: 'pip install pybind11 wheel && pip install git+https://github.com/Siegel-Lab/libSps.git'
          MACOSX_DEPLOYMENT_TARGET : '10.13'
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl


  publish-testpypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: ./dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip_existing: true
        repository_url: https://test.pypi.org/legacy/


  test:
    needs: [publish-testpypi]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          python-version: ["3.8", "3.9", "3.11"]
          os: ["ubuntu-20.04", "ubuntu-22.04", "windows-2022", "macos-12", "macos-13"]

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: |
        pip install --upgrade pip
        pip install scipy statsmodels scikit-learn
        pip install --index-url https://test.pypi.org/simple/ libbiosmoother

    - name: Import package
      run: |
        python -c "import libbiosmoother; print(libbiosmoother.LIB_BIO_SMOOTHER_CPP_VERSION)"
        libbiosmoother -v